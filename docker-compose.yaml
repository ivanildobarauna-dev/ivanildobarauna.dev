version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    container_name: portfolio-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - DD_SERVICE=ivanildobarauna.local
      - DD_ENV=local
      - DD_VERSION=local
      - DD_TRACE_SAMPLE_RATE=1.0
      - DD_AGENT_HOST=host.docker.internal
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS="app:portfolio,tech:nextjs,role:frontend,env:local"
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
      - NEXT_PUBLIC_API_BASE_URL=/api/v1
    # Permite que o container acesse o host na rede Docker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "ivanildobarauna.local"}]'
      tags.env: "local"
      tags.service: "ivanildobarauna.local"
      tags.tech: "nextjs"
      tags.app: "portfolio"
      tags.role: "frontend"
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - portfolio-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    ports:
      - "8090:8090"
    environment:
      - DD_SERVICE=api.ivanildobarauna.dev
      - DD_ENV=local
      - DD_VERSION=local
      - DD_TRACE_SAMPLE_RATE=1.0
      - DD_AGENT_HOST=host.docker.internal
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS="app:portfolio,tech:python,role:backend,env:local"
      - DD_RUNTIME_METRICS_ENABLED=true
      - POSTGRES_HOST=192.168.15.51
      - POSTGRES_PORT=5432
      - POSTGRES_USER=backend
      - POSTGRES_PASSWORD=backend
      - POSTGRES_DB=portfolio
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "api.ivanildobarauna.dev"}]'
      tags.env: "local"
      tags.service: "api.ivanildobarauna.dev"
      tags.tech: "python"
      tags.app: "portfolio"
      tags.role: "backend"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/v1/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - portfolio-network

  redis:
    image: redis:7
    container_name: portfolio-redis
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge
