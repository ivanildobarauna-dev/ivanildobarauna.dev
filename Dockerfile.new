FROM node:20-alpine AS base

# Instala as dependências necessárias
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Instala as dependências
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci

# Build da aplicação
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Imagem de produção
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Copia os arquivos de teste e scripts
COPY --from=builder /app/src/test ./src/test
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/vitest.config.ts ./
COPY --from=builder /app/package.json ./

# Instala as dependências de desenvolvimento necessárias para os testes
RUN npm install --only=dev

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME localhost

# Dá permissão de execução ao script de healthcheck
RUN chmod +x ./scripts/healthcheck.sh

# Define o healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD ./scripts/healthcheck.sh

# Inicia a aplicação
CMD ["node", "server.js"] 