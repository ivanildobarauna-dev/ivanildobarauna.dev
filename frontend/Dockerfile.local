# Etapa de build
FROM node:20-slim AS builder

WORKDIR /app

# Instala dependências de build
RUN apt-get update && apt-get install -y python3 make g++ && rm -rf /var/lib/apt/lists/*

# Copia apenas os arquivos necessários para instalar as dependências
COPY package.json package-lock.json* ./
RUN npm install --no-audit --no-fund --verbose

# Copia o restante dos arquivos e usa a configuração local
COPY . .
RUN cp next.config.local.js next.config.js

# Gera a build de desenvolvimento
RUN npm run build

# Etapa de execução
FROM node:20-slim AS runner

WORKDIR /app

# Define variáveis de ambiente
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Copia apenas os arquivos necessários
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.js ./next.config.js

# Copia e instala o tracer
COPY ./tracer /tracer
RUN cd /tracer && npm install

# Instala apenas as dependências de produção
RUN npm install --no-audit --prefer-offline

# Configura o NODE_OPTIONS para o ambiente de desenvolvimento
# Removendo a injeção automática para evitar conflitos
# O tracer pode ser carregado de outra forma se necessário

# Expõe a porta 3000 para o frontend
EXPOSE 3000

# Usa o mesmo comando do Dockerfile de produção
# para manter consistência entre ambientes
CMD ["node_modules/.bin/next", "start", "-p", "3000"]
